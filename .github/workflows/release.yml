name: Release

on:
  release:
    types: [published]

jobs:
  update-version:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Extract version from tag
        run: |
          # Extract version from the release tag (remove 'v' prefix if present)
          TAG_NAME="${{ github.event.release.tag_name }}"
          VERSION=${TAG_NAME#v}
          echo "Release tag: $TAG_NAME"
          echo "Version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          
      - name: Setup Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
      - name: Update package.json version
        run: |
          # Get current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current package.json version: $CURRENT_VERSION"
          echo "Release tag version: ${{ env.VERSION }}"
          
          if [ "${{ env.VERSION }}" != "$CURRENT_VERSION" ]; then
            echo "Updating package.json version from $CURRENT_VERSION to ${{ env.VERSION }}"
            npm version ${{ env.VERSION }} --no-git-tag-version
            echo "VERSION_UPDATED=true" >> $GITHUB_ENV
          else
            echo "Package.json version already matches release tag (${{ env.VERSION }})"
            echo "VERSION_UPDATED=false" >> $GITHUB_ENV
          fi
          
      - name: Commit version update
        run: |
          if [ "${{ env.VERSION_UPDATED }}" = "true" ]; then
            git add package.json
            git commit -m "chore: update package.json version to v${{ env.VERSION }}"
            git push origin main
            echo "Updated package.json version and pushed to main"
          else
            echo "No version update needed - package.json already has correct version"
          fi
